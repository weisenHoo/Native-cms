<?php
define("CACHE_DIR","cache");
define("LOG_DIR","log");
define("TPL_DIR","tpl");
define("CONFIG_DIR","config");
define("TEMPLETE_DIR","templete");
define("MODULE_DIR","module");
define("UPLOAD_DIR","upload");
define("CACHE_PATH", TEMP_PATH.'/'.CACHE_DIR);
define("LOG_PATH", TEMP_PATH.'/'.LOG_DIR);
define("TPL_PATH", TEMP_PATH.'/'.TPL_DIR);
define("TEMPLETE_PATH", APP_PATH.'/'.TEMPLETE_DIR);
if(!defined("MODULE_PATH")) define("MODULE_PATH", APP_PATH.'/'.MODULE_DIR);
define("CONFIG_PATH", MODULE_PATH.'/'.CONFIG_DIR);
define("UPLOAD_PATH", APP_PATH.'/'.UPLOAD_DIR);
function error($error){	if(C("DEBUG")){	if(!is_array($error)){$backtrace= debug_backtrace();$e['message']=$error;$info='';	foreach($backtrace as$v){$file= isset($v['file'])?$v['file']:'';$line= isset($v['line'])?"[".$v['line']."]":'';$class= isset($v['class'])?$v['class']:'';$type= isset($v['type'])?$v['type']:'';$function= isset($v['function'])?$v['function']."()":'';$info.=$file.$line.$class.$type.$function."<br/>";}$e['info']=$info;}else{$e=$error;}}else{$e['message']= C("ERROR_MESSAGE");}	include C("DEBUG_TPL");	exit();}
function notice($e){	if(C("DEBUG")&& C("NOTICE_SHOW")){$time= number_format((microtime(TRUE)-debug::$runtime['app_start']), 4);$memory= memory_get_usage();$message=$e[1];$file=$e[2];$line=$e[3];$msg="<h1 style='width: 972px;background:#333;color:#fff;font-size: 14px;padding: 3px 5px;margin-top: 20px;'>NOTICE:{$message}</h1><div style='width: 982px;'><table style='border: 1px solid#dcdcdc;width: 982px;padding: 10px;'><tr><td>time</td><td>memory</td><td>File</td><td>Line</td></tr><tr><td>{$time}</td><td>{$memory}</td><td>{$file}</td><td>{$line}</td></tr></table></div>";	echo$msg;}}
function _md5($var){	return md5(serialize($var));}
function A($control){	if(strstr($control,'.')){$arr= explode('.',$control);$module=$arr[0];$control=$arr[1];}else{$module= MODULE;}	static$_control= array();$control=$control.C("CONTROL_FIX");	if(isset($_cintrol[$control])){	return$_control[$control];}$control_path= MODULE_PATH.'/'.$module.'/'.$control.C("CLASS_FIX").'.php';	loadfile($control_path);	if(class_exists($control)){$_control[$control]= new$control();	return$_control[$control];}else{	return FALSE;}}
function O($class,$method=null,$args=array()){	static$result= array();$name= empty($args)?$class.$method:$class.$method._md5($args);	if(!isset($result[$name])){$obj= new$class();	if(!is_null($method)&& method_exists($obj,$method)){	if(!empty($args)){$result[$name]= call_user_func_array(array(&$obj,$method), array($args));}else{$result[$name]=$obj->$method();}}else{$result[$name]=$obj;}}	return$result[$name];}
function loadfile($file=''){	static$fileArr= array();	if(empty($file)){	return$fileArr;}$filePath= realpath($file);	if(isset($fileArr[$filePath])){	return$fileArrp[$filePath];}	if(!is_file($filePath)){	error("文件".$file."不存在！");}	require$filePath;$fileArr[$filePath]= TRUE;	return$fileArr[$filePath];}
function C($name=null,$value=null){	static$config= array();	if(is_null($name)){	return$config;}	if(is_string($name)){$name= strtolower($name);	if(!strstr($name,".")){	if(is_null($value)){	return isset($config[$name])?$config[$name]:null;}else{$config[$name]=$value;	return;}}$name= explode(".",$name);	if(is_null($value)){	return isset($config[$name[0][1]])?$config[$name[0][1]]:null;}else{$config[$name[0][1]]=$value;	return;}}	if(is_array($name)){$config= array_merge($config, array_change_key_case($name));	return TRUE;}}
function del_space($file_name){$data= file_get_contents($file_name);$data= substr($data, 0, 5)=="<?php"?substr($data, 5):$data;$data= substr($data,-2)=="?>"?substr($data, 0,-2):$data;$preg_arr= array('/\/\*.*?\*\/\s*/is','/\/\/.*?[\r\n]/is','/(?!\w)\s*?(?!\w)/is');	return preg_replace($preg_arr,'',$data);}
class APP{	static$module;	static$control;	static$action;	static function run(){	spl_autoload_register(array(__CLASS__,"autoload"));	set_error_handler(array(__CLASS__,"error"));	set_exception_handler(array(__CLASS__,"exception"));	define("MAGIC_QUTES_GPC", get_magic_quotes_gpc()?TRUE:FALSE);	if(function_exists("date_default_timezone_set")){	date_default_timezone_set(C("DEFAULT_TIMEZOBE_SET"));}	self::config();	if(C("DEBUG")){	debug::start("app_start");}	self::init();	if(C("DEBUG")){	debug::show("app_start","app_end");}	log::save();}	static function init(){	url::parseUrl();$control_file= MODULE_PATH.'/'.MODULE.'/'.CONTROL.C("CONTROL_FIX").C("CLASS_FIX").'.php';$control= A(CONTROL);$action= ACTION;	if(!method_exists($control,$action)){	error("控制器".CONTROL."中的动作".$action."不存在");}$control->$action();}	static function config(){$config_file= CONFIG_PATH.'/config.php';	if(is_file($config_file)){	C(require$config_file);}}	static function autoload($classname){	if(strpos($classname, C("CONTROL_FIX"))>0){	error("错误：控制器必须有A()函数创建，或者类没有创建");}$classfile= PHP_PATH.'/libs/bin/'.$classname.'.class.php';	loadfile($classfile);}	static function error($erron,$errstr,$errfile,$errline){	switch($erron){	case E_ERROR:	case E_USER_ERROR:$errmsg="ERROR:[$erron]<strong>$errstr</strong>File:$errfile"."[$errline]";	log::write("[ERROR:][$erron]<strong>$errstr</strong>File:$errfile($errline)");	error($errmsg);	break;	case E_NOTICE:	case E_USER_NOTICE:	case E_USER_WARNING:	default:$errmsg="NOTICE:[$erron]<strong>$errstr</strong>File:$errfile"."[$errline]";	log::set("[$erron]<strong>$errstr</strong>File:$errfile($errline)","NOTICE");	notice(func_get_args());	break;}}	static function exception($e){	error($e->show());}}C(require PHP_PATH.'/libs/etc/init.config.php');?>